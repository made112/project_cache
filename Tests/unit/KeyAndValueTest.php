<?php

use PHPUnit\Framework\TestCase;
class KeyAndValueTest extends TestCase {
    public KeyAndImage $KeyAndImage;
    public $MockDB;
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->MockDB = $this->createMock(database::class);
        $this->KeyAndImage = new KeyAndImage($this->MockDB);
    }
    /** @test */
    /** @dataProvider  provideValidKeys */
    public function test_the_validation_of_this_valid_keys($key){
        $result = $this->KeyAndImage->validateKey($key);
        $this->assertTrue($result);
    }

    /** @test */
    /** @dataProvider  provideInvalidKeys */
    public function test_the_validation_of_this_invalid_keys($key){
        $result = $this->KeyAndImage->validateKey($key);
        $this->assertfalse($result);
    }
    /** @test */
    public function test_get_Key_Image_Pair(){
        $key = "123";
        $expected_array = [
            [
                "123",
                "image.jpeg"
            ]
        ];
        $this->MockDB->method("query")->willReturn($expected_array);
        $actual_data = $this->KeyAndImage->getKeyImagePair($key);
        $this->assertEquals($actual_data,$expected_array);
    }
    public function provideValidKeys(){
        return [
            ["ASOUY"],
            ["bshKOP"],
            ["12572@#"],
            ["@@##$&"]
        ];
    }
    public function provideInvalidKeys(){
        return [
            ['(*'],// Not allowed symbols
            ["0123456789asdfghjklqwertyuiopzxcvbnm##########$$$$$@@@@@ASDFFGHTYUI"]//more than 60 character
        ];
    }
}